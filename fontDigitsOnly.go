package ledgrid

import (
	"golang.org/x/image/font/basicfont"
	"image"
)

// Groesse: 8x8 Pixel

var Lightdot8x8 = &basicfont.Face{
	Advance: 9,
	Width:   8, // Dies ist die Breite eines Buchstabens gem. Maske
	Height:  9,
	Ascent:  8, // Dies ist die Hoehe eines Buchstabens gem. Maske
	Descent: 0,
	Mask:    maskLightdot8x8,
	Ranges:  []basicfont.Range{
        {'\u0030', '\u003a', 0},
    },
}

var maskLightdot8x8 = &image.Alpha{
	Stride: 8,
	Rect:   image.Rectangle{Max: image.Point{8, 8 * 10}},
	Pix: []byte{
		// 0x30 '0'
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,

		// 0x31 '1'
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00,

		// 0x32 '2'
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
		0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,

		// 0x33 '3'
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,

		// 0x34 '4'
		0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00,

		// 0x35 '5'
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,

		// 0x36 '6'
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,

		// 0x37 '7'
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
		0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
		0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,

		// 0x38 '8'
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,

		// 0x39 '9'
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
	},
}

// Groesse: 6x8 Pixel

var Lightdot6x8 = &basicfont.Face{
	Advance: 7,
	Width:   6, // Dies ist die Breite eines Buchstabens gem. Maske
	Height:  9,
	Ascent:  8, // Dies ist die Hoehe eines Buchstabens gem. Maske
	Descent: 0,
	Mask:    maskLightdot6x8,
	Ranges:  []basicfont.Range{
        {'\u0030', '\u003a', 0},
    },
}

var maskLightdot6x8 = &image.Alpha{
	Stride: 6,
	Rect:   image.Rectangle{Max: image.Point{6, 8 * 10}},
	Pix: []byte{
		// 0x30 '0'
		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,

		// 0x31 '1'
		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
		0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,

		// 0x32 '2'
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
		0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
		0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,

		// 0x33 '3'
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,

		// 0x34 '4'
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,

		// 0x35 '5'
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,

		// 0x36 '6'
		0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 0x00, 0x00,
		0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,

		// 0x37 '7'
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
		0x00, 0x00, 0x00, 0xff, 0xff, 0x00,
		0x00, 0x00, 0x00, 0xff, 0xff, 0x00,
		0x00, 0x00, 0x00, 0xff, 0xff, 0x00,
		0x00, 0x00, 0x00, 0xff, 0xff, 0x00,

		// 0x38 '8'
		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,

		// 0x39 '9'
		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
	},
}

